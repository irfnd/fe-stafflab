-- Status
-- Table
create table status (
  "id" bigint generated by default as identity primary key,
  "nama" varchar not null,
  "createdAt" timestamp with time zone null default(now()),
  unique("nama")
);

-- Instansi
-- Table
create table instansi (
  "id" bigint generated by default as identity primary key,
  "nama" varchar not null,
  "alamat" text not null,
  "createdAt" timestamp with time zone null default(now()),
  unique("nama")
);

-- Divisi
-- Table
create table divisi (
  "id" bigint generated by default as identity primary key,
  "nama" varchar not null,
  "idInstansi" bigint not null references public.instansi on delete cascade,
  "createdAt" timestamp with time zone null default(now()),
  unique("nama", "idInstansi")
);

-- Jabatan
-- Table
create table jabatan (
  "id" bigint generated by default as identity primary key,
  "nama" varchar not null,
  "idInstansi" bigint not null references public.instansi on delete cascade,
  "idDivisi" bigint not null references public.divisi on delete cascade,
  "createdAt" timestamp with time zone null default(now()),
  unique("nama", "idInstansi", "idDivisi")
);

-- Golongan
-- Table
create table golongan (
  "id" bigint generated by default as identity primary key,
  "nama" varchar not null,
  "keterangan" text null default (null),
  "createdAt" timestamp with time zone null default(now()),
  unique("nama")
);

-- Pegawai
-- Table
create table pegawai (
  "nip" bigint not null primary key,
  "nama" varchar not null,
  "email" varchar not null,
  "noTelepon" varchar not null,
  "idStatus" bigint not null references public.status,
  "idInstansi" bigint not null references public.instansi on delete cascade,
  "idDivisi" bigint not null references public.divisi on delete cascade,
  "idJabatan" bigint not null references public.jabatan on delete cascade,
  "idGolongan" bigint not null references public.golongan,
  "uuidUser" uuid not null references auth.users on delete cascade,
  "createdAt" timestamp with time zone null default(now()),
  unique("nama", "email", "noTelepon", "uuidUser")
);

-- Data Pribadi
-- Enum Types
create type jenis_kelamin as enum ('l', 'p');
create type agama as enum ('islam', 'kristen', 'katholik', 'hindu', 'budha', 'khonghucu');
-- Table
create table data_pribadi (
  "nik" bigint not null primary key,
  "tempatLahir" varchar not null,
  "tanggalLahir" date not null,
  "jenisKelamin" jenis_kelamin,
  "agama" agama,
  "kawin" boolean null default(false),
  "alamat" text not null,
  "nipPegawai" bigint not null references public.pegawai on delete cascade,
  "createdAt" timestamp with time zone null default(now()),
  unique("nipPegawai")
);

-- Dokumen
-- Enum Types
create type kategori_dokumen as enum ('profil', 'pribadi', 'lamaran', 'pendidikan', 'mutasi', 'golongan', 'cuti', 'hukuman');
-- Table
create table dokumen (
  "id" bigint generated by default as identity primary key,
  "nama" varchar not null,
  "kategori" kategori_dokumen,
  "detail" jsonb null default('{}'::jsonb),
  "nipPegawai" bigint not null references public.pegawai on delete cascade,
  "uploadedAt" timestamp with time zone null default(now())
);


-- Enable RLS
alter table status enable row level security;
alter table instansi enable row level security;
alter table divisi enable row level security;
alter table jabatan enable row level security;
alter table golongan enable row level security;
alter table pegawai enable row level security;
alter table data_pribadi enable row level security;
alter table dokumen enable row level security;

-- Set RLS Policies
create policy "CRUD (Only Admin)"
  on public.status as permissive for all to authenticated
  using (((get_my_claim('claims'::text)) = '"ADMIN"'::jsonb));
create policy "CRUD (Only Admin)"
  on public.instansi as permissive for all to authenticated
  using (((get_my_claim('claims'::text)) = '"ADMIN"'::jsonb));
create policy "CRUD (Only Admin)"
  on public.divisi as permissive for all to authenticated
  using (((get_my_claim('claims'::text)) = '"ADMIN"'::jsonb));
create policy "CRUD (Only Admin)"
  on public.jabatan as permissive for all to authenticated
  using (((get_my_claim('claims'::text)) = '"ADMIN"'::jsonb));
create policy "CRUD (Only Admin)"
  on public.golongan as permissive for all to authenticated
  using (((get_my_claim('claims'::text)) = '"ADMIN"'::jsonb));
create policy "CRUD (Only Admin)"
  on public.pegawai as permissive for all to authenticated
  using (((get_my_claim('claims'::text)) = '"ADMIN"'::jsonb));
create policy "CRUD (Only Admin)"
  on public.data_pribadi as permissive for all to authenticated
  using (((get_my_claim('claims'::text)) = '"ADMIN"'::jsonb));
create policy "CRUD (Only Admin)"
  on public.dokumen as permissive for all to authenticated
  using (((get_my_claim('claims'::text)) = '"ADMIN"'::jsonb));
